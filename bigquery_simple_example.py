# -*- coding: utf-8 -*-
"""DE Test

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UDQaAAKKraZ8f3-N-UYyO7XXStvr4Lla
"""

from google.cloud import bigquery

"""Put the three locations in a string for ease of use later in the code"""

data = '''Huntsman Cancer POINT(-111.834788007275 40.7728588724292)
Lavell Edwards Stadium POINT(-111.654513331482 40.2575427395657)
Super 8 Wendover POINT(-114.030483429564 40.7382085562585)'''

"""created two queries so I could take advantage of not having to write the query 
manually
"""

bq_query = '''

SELECT 'NAME' as `Title`,zip_code as `zip`, city, county, state_code as `state`

  # FROM `bigquery-public-data.geo_us_boundaries.counties`
  FROM `bigquery-public-data.geo_us_boundaries.zip_codes`
  where ST_DWithin( zip_code_geom,
      ST_GeogPoint(POINT),
      0)
'''

gp_query = '''

SELECT 'NAME' as `Title`,zip_code as `zip`, city, county, state_code as `state`
    , internal_point_lat as `latitude`,	internal_point_lon as `longitude`
  # FROM `bigquery-public-data.geo_us_boundaries.counties`
  FROM `bigquery-public-data.geo_us_boundaries.zip_codes`
  where ST_DWithin( zip_code_geom,
      ST_GeogPoint(POINT),
      0)
'''

"""made the data into a list because lists are easier to use"""

data_list = data.split('\n')


for i, values in enumerate(data_list):
    if i == 0:
      bq_query = bq_query.replace('NAME',values[:values.find('POINT')]).replace('POINT', values[values.find('(')+1:-2].replace(' ',','))
    elif i > 0 and i < len(data_list):
      bq_query = bq_query + ' union all ' + bq_query.replace('NAME',values[:values.find('POINT')]).replace('POINT', values[values.find('(')+1:-2].replace(' ',','))

client = bigquery.Client(project="locationproject-201804")
query_job = client.query(bq_query)
query_results = query_job.result()
for r in query_results:
  print(r.values())

from google.colab import drive
drive.mount('/content/drive')

"""geopandas"""

# !pip install geopandas
import geopandas

for i, values in enumerate(data_list):
    if i == 0:
      gp_query = gp_query.replace('NAME',values[:values.find('POINT')]).replace('POINT', values[values.find('(')+1:-2].replace(' ',','))
    elif i > 0 and i < len(data_list):
      gp_query = gp_query + ' union all ' + gp_query.replace('NAME',values[:values.find('POINT')]).replace('POINT', values[values.find('(')+1:-2].replace(' ',','))

"""easiest thing was put put the data into google's dataframe before converting it into a geopandas dataframe"""

goog_df = client.query(gp_query).to_dataframe()

geodf = geopandas.GeoDataFrame(
    goog_df, geometry=geopandas.points_from_xy(goog_df.longitude, goog_df.latitude))
print(geodf.head())